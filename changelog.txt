This is a complete port of ReClass to x64. ReClass was originally written by DrUnKeN ChEeTaH, later developed by @P47R!CK and @DogMatt. I will try to continue all the great work they've done over the years. I know there have been previous discussions on mods here and there. I will revisit all those ideas shortly, feel free to recommend any ideas and please post any problems you encounter running ReClass.

You can contact me by sending an email to aidankhoury@gmail.com.

[version 1.2.0]
- View unsigned types in hexidecimal form via toggle.
- Added status bar at the bottom to show symbol loading progress.
- Updated to use the new Tinyxml2 library.
- Many performance imporvements and bugfixes.

[version 1.1.0]
- Rebranded as ReClassEx
- Process list dialog instead of scroll menu.
- Added automatic resolving of symbols for each module in a process.
- Added Ctrl+S hotkey for file saving (and other hotkeys).
- Added Plugin API for making plugins.
- Disassembly syntax highlighting (buggy).

[version 1.0.1]
- Up and down arrow hotkeys to switch nodes
- Delete hotkey to delete selected nodes
- Delete button to delete selected nodes
- Right click quick modify menu
- Hex 64 type
- Insert 2048 bytes
- New icons for some types
- Fixed syntax highlighting for 64 bit when generating code
- Fixed array sizes when loading .reclass files
- Added more themes
- Colorful tabs with sexy border
- Added RTTI info for pointers
- Cleaned up RTTI and made the RTTI string editable
- Made addresses edittable for copy & pasting
- Added memory swap option to switch endianness.
- Added Bits type for a bit view instead of text
- Added ability to input module names in address node (e.g. 'reclass.exe+0x40')
- Added Module list with the ability to create a new class at module start address
- Added Console dialog with syntax highlighting
- Added ability to load PDB file and display PDB Symbols 

[version 0.1b]
- ribbon items have been slightly re-ordered
- added a PCHAR type
- fixed pasting issue where characters ended up being truncated, the subclassed edit control is now created with the ES_AUTOHSCROLL style
- added a new class browser which can be removed and reverted to back to the original drop down menu
- added an option to filter out commonly unused processes from the process list (svchost etc..)
- fixed issue where some ribbon items were missing an OnUpdate command causing them not to be greyed out correctly
- fixed GUI issue where Hex16 nodes had 8 character text preview
- fixed formatting issue where FLOAT and DOUBLE would be padded with excessive spacing

[version 0.1a]
- added CNode64
- converted many functions where 4 byte alignment was hard coded
- added new functionality to insert and add 8 byte hex nodes
- changed rarely used quaternion type to 16-byte aligned Vec3 which is displayed as Vec4
- fixed numerous text padding and column spacing issues
- fixed an issue where creating a ptr at an invalid address would incorrectly format offsets
- fixed nt_function, nt_pointer, vtable node sizes
- added limits to float preview where value must be > -99999.0 && < 99999.0
- added limits to pointer preview where value must be > 140000000 && < 80000000000
- fixed fill nodes bug where incorrect padding was being added to WORD and BYTE datatypes
- sub-classed CEdit refused to take in more than 8 characters, fixed scrolling issue that caused this
- created preview for __int64 type in hex format
- double data type was broken due to incorrect mapping in the mfc ribbon
